name: SRIYA CI/CD

on:
  push:
    branches: [dev, main] # dev = preview deploy, main = live deploy
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ---------- DEV BRANCH: Preview build + deploy (apiDev + hosting preview) ----------
  dev-preview:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Auth to Google (via service account JSON)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SA_PROD }}
          export_environment_variables: true

      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      # ----- Build & quick checks: functions -----
      - name: Functions - install
        working-directory: functions
        run: npm ci

      - name: Functions - audit (non-blocking)
        working-directory: functions
        run: npm audit --omit=dev --audit-level=high || true

      # ----- Build & quick checks: web (preview mode -> uses .env.preview) -----
      - name: Web - install
        working-directory: web
        run: npm ci

      - name: Web - build (preview)
        working-directory: web
        run: npm run build -- --mode preview

      - name: Web - audit (non-blocking)
        working-directory: web
        run: npm audit --omit=dev --audit-level=high || true

      # ----- Deploy: functions:apiDev (dev DB) -----
      - name: Deploy Functions (apiDev)
        run: |
          firebase deploy \
            --only functions:apiDev \
            --project "${{ vars.PROD_PROJECT_ID }}" \
            --force

      # ----- Deploy: hosting preview channel -----
      - name: Deploy Hosting (preview channel)
        run: |
          firebase hosting:channel:deploy dev \
            --project "${{ vars.PROD_PROJECT_ID }}" \
            --expires 3d
          echo "Preview URLs ^^^ (copy the web.app one)"

  # ---------- MAIN BRANCH: Live build + deploy (api + hosting live) ----------
  prod-live:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Auth to Google (via service account JSON)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SA_PROD }}
          export_environment_variables: true

      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      # ----- Build & quick checks: functions -----
      - name: Functions - install
        working-directory: functions
        run: npm ci

      - name: Functions - audit (non-blocking)
        working-directory: functions
        run: npm audit --omit=dev --audit-level=high || true

      # ----- Build & quick checks: web (production) -----
      - name: Web - install
        working-directory: web
        run: npm ci

      - name: Web - build (production)
        working-directory: web
        run: npm run build -- --mode production

      - name: Web - audit (non-blocking)
        working-directory: web
        run: npm audit --omit=dev --audit-level=high || true

      # ----- Deploy: functions:api (prod DB) -----
      - name: Deploy Functions (api)
        run: |
          firebase deploy \
            --only functions:api \
            --project "${{ vars.PROD_PROJECT_ID }}" \
            --force

      # ----- Deploy: hosting live -----
      - name: Deploy Hosting (live)
        run: |
          firebase deploy \
            --only hosting \
            --project "${{ vars.PROD_PROJECT_ID }}"
